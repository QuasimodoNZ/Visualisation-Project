from django.db import models
import choices

ADJUSTMENT_FACTOR = 1.015675 # Adjustment factor for dollar amounts, this is for 2006

class State(models.Model):
    code = models.IntegerField(unique=True)
    name = models.CharField(max_length=80)
    abbreviation = models.CharField(max_length=2)

class PublicUseMicrodataArea(models.Model):
    code = models.IntegerField()
    state = models.ForeignKey(State)

class PrecomputedProperties(models.Model):
    metric_name= models.CharField(max_length=30, unique=True)
    min = models.IntegerField()
    avg = models.DecimalField(max_digits=10, decimal_places=2)
    max = models.IntegerField()
    count = models.IntegerField()
    ST = models.IntegerField(verbose_name='State Code', choices=choices.ST)

    class Meta:
        index_together = ('metric_name', 'ST')

class House(models.Model):
    SERIALNO = models.IntegerField(verbose_name='Housing unit/GQ person serial number')
    DIVISION = models.IntegerField(verbose_name='Division code', choices=choices.DIVISION)
    PUMA = models.ForeignKey(PublicUseMicrodataArea, verbose_name='Public use microdata area code (PUMA) Designates area of 100,000 or more population. Use with ST for unique code. 00100..08200')
    REGION = models.IntegerField(verbose_name='Region code', choices=choices.REGION)
    ST = models.IntegerField(verbose_name='State Code', choices=choices.ST)
    WGTP = models.IntegerField(verbose_name='Housing Weight')
    NP = models.IntegerField(verbose_name='Number of person records following this housing record')
    TYPE = models.IntegerField(verbose_name='Type of unit', choices=choices.TYPE)
    ACR = models.IntegerField(verbose_name='Lot size', choices=choices.ACR, null=True)
    AGS = models.IntegerField(verbose_name='Sales of Agriculture Products', choices=choices.AGS, null=True)
    BDS = models.IntegerField(verbose_name='Bedrooms', choices=choices.BDS, null=True)
    BLD = models.IntegerField(verbose_name='Units in structure', choices=choices.BLD, null=True)
    BUS = models.IntegerField(verbose_name='Business or medical office on property', choices=choices.BUS, null=True)
    CONP = models.IntegerField(verbose_name='Condo fee (monthly amount)', null=True)
    ELEP = models.IntegerField(verbose_name='Electricity (monthly cost)', choices=choices.ELEP, null=True)
    FS = models.IntegerField(verbose_name='Food stamp amount', null=True)
    FULP = models.IntegerField(verbose_name='House heating fuel (yearly cost)', choices=choices.FULP, null=True)
    GASP = models.IntegerField(verbose_name='Gas (monthly cost)', choices=choices.GASP, null=True)
    HFL = models.IntegerField(verbose_name='House heating fuel', choices=choices.HFL, null=True)
    INSP = models.IntegerField(verbose_name='Fire/hazard/flood insurance (yearly amount)', null=True)
    KIT = models.IntegerField(verbose_name='Complete kitchen facilities', choices=choices.KIT, null=True)
    MHP = models.IntegerField(verbose_name='Mobile home costs (yearly amount)', null=True)
    MRGI = models.IntegerField(verbose_name='Payment include fire/hazard/flood insurance', choices=choices.MRGI, null=True)
    MRGP = models.IntegerField(verbose_name='Mortgage payment (monthly amount)', null=True)
    MRGT = models.IntegerField(verbose_name='Payment include real estate taxes', choices=choices.MRGT, null=True)
    MRGX = models.IntegerField(verbose_name='Mortgage status', choices=choices.MRGX, null=True)
    PLM = models.IntegerField(verbose_name='Complete plumbing facilities', choices=choices.PLM, null=True)
    RMS = models.IntegerField(verbose_name='Rooms', choices=choices.RMS, null=True)
    RNTM = models.IntegerField(verbose_name='Meals included in rent', choices=choices.RNTM, null=True)
    RNTP = models.IntegerField(verbose_name='Monthly rent', null=True)
    SMP = models.IntegerField(verbose_name='Second mortgage payment (monthly amount)', null=True)
    TEL = models.IntegerField(verbose_name='Telephone in Unit', choices=choices.TEL, null=True)
    TEN = models.IntegerField(verbose_name='Tenure', choices=choices.TEN, null=True)
    VACS = models.IntegerField(verbose_name='Vacancy status', choices=choices.VACS, null=True)
    VAL = models.IntegerField(verbose_name='Property value', choices=choices.VAL, null=True)
    VEH = models.IntegerField(verbose_name='Vehicles (1 ton or less) available', choices=choices.VEH, null=True)
    WATP = models.IntegerField(verbose_name='Water (yearly cost)', choices=choices.WATP, null=True)
    YBL = models.IntegerField(verbose_name='When structure first built', choices=choices.YBL, null=True)
    FES = models.IntegerField(verbose_name='Family type and employment status', choices=choices.FES, null=True)
    FINCP = models.IntegerField(verbose_name='Family income', null=True)
    FPARC = models.IntegerField(verbose_name='Family presence and age of related children', choices=choices.FPARC, null=True)
    GRNTP = models.IntegerField(verbose_name='Gross rent', null=True)
    GRPIP = models.IntegerField(verbose_name='Gross rent as a percentage of household income past 12 months', null=True)
    HHL = models.IntegerField(verbose_name='Household language', choices=choices.HHL, null=True)
    HHT = models.IntegerField(verbose_name='Household/family type', choices=choices.HHT, null=True)
    HINCP = models.IntegerField(verbose_name='Household income', null=True)
    HUGCL = models.IntegerField(verbose_name='Flag to indicate grandchild living in housing unit', choices=choices.HUGCL, null=True)
    HUPAC = models.IntegerField(verbose_name='Family presence and age of children', choices=choices.HUPAC, null=True)
    HUPAOC = models.IntegerField(verbose_name='HH presence and age of own children', choices=choices.HUPAOC, null=True)
    HUPARC = models.IntegerField(verbose_name='HH presence and age of related children', choices=choices.HUPARC, null=True)
    LNGI = models.IntegerField(verbose_name='Linguistic isolation', choices=choices.LNGI, null=True)
    MV = models.IntegerField(verbose_name='When moved into this house or apartment', choices=choices.MV, null=True)
    NOC = models.IntegerField(verbose_name='Number of own children in household (unweighted)', null=True)
    NPF = models.IntegerField(verbose_name='Number of persons in family (unweighted)', null=True)
    NPP = models.IntegerField(verbose_name='Grandparent headed household with no parent present', choices=choices.NPP, null=True)
    NR = models.IntegerField(verbose_name='Presence of nonrelative in household', choices=choices.NR, null=True)
    NRC = models.IntegerField(verbose_name='Number of related children in household (unweighted)', null=True)
    OCPIP = models.IntegerField(verbose_name='Selected monthly owner costs as a percentage of household income during the past 12 months', null=True)
    PARTNER = models.IntegerField(verbose_name='Unmarried partner household', choices=choices.PARTNER, null=True)
    PSF = models.IntegerField(verbose_name='Presence of subfamilies in Household', choices=choices.PSF, null=True)
    R18 = models.IntegerField(verbose_name='Presence of persons under 18 years in household (unweighted)', choices=choices.R18, null=True)
    R60 = models.IntegerField(verbose_name='Presence of persons 60 years and over in household (unweighted)', choices=choices.R60, null=True)
    R65 = models.IntegerField(verbose_name='Presence of persons 65 years and over in household (unweighted)', choices=choices.R65, null=True)
    RESMODE = models.IntegerField(verbose_name='Response mode', choices=choices.RESMODE, null=True)
    SMOCP = models.IntegerField(verbose_name='Selected monthly owner costs', null=True)
    SMX = models.IntegerField(verbose_name='Second mortgage or home equity loan status', choices=choices.SMX, null=True)
    SRNT = models.IntegerField(verbose_name='Specified rent unit', choices=choices.SRNT, null=True)
    SVAL = models.IntegerField(verbose_name='Specified value unit', choices=choices.SVAL, null=True)
    TAXP = models.IntegerField(verbose_name='Property taxes (yearly amount)', choices=choices.TAXP, null=True)
    WIF = models.IntegerField(verbose_name='Workers in family during the past 12 months', choices=choices.WIF, null=True)
    WKEXREL = models.IntegerField(verbose_name='Work experience of householder and spouse', choices=choices.WKEXREL, null=True)
    WORKSTAT = models.IntegerField(verbose_name='Work status of householder or spouse in family households', choices=choices.WORKSTAT, null=True)
    FACRP = models.IntegerField(verbose_name='Lot size allocation flag', choices=choices.FACRP, null=True)
    FAGSP = models.IntegerField(verbose_name='Sales of Agricultural Products allocation flag', choices=choices.FAGSP, null=True)
    FBDSP = models.IntegerField(verbose_name='Number of bedrooms allocation flag', choices=choices.FBDSP, null=True)
    FBLDP = models.IntegerField(verbose_name='Units in structure allocation flag', choices=choices.FBLDP, null=True)
    FBUSP = models.IntegerField(verbose_name='Business or medical office on property allocation flag', choices=choices.FBUSP, null=True)
    FCONP = models.IntegerField(verbose_name='Condominium fee allocation flag', choices=choices.FCONP, null=True)
    FELEP = models.IntegerField(verbose_name='Electricity (monthly cost) allocation flag', choices=choices.FELEP, null=True)
    FFSP = models.IntegerField(verbose_name='Food stamp amount (yearly amount) allocation flag', choices=choices.FFSP)
    FFULP = models.IntegerField(verbose_name='House heating fuel (yearly cost) allocation flag', choices=choices.FFULP, null=True)
    FGASP = models.IntegerField(verbose_name='Gas (monthly cost) allocation flag', choices=choices.FGASP, null=True)
    FHFLP = models.IntegerField(verbose_name='House heating fuel allocation flag', choices=choices.FHFLP, null=True)
    FINSP = models.IntegerField(verbose_name='Fire, hazard, flood insurance allocation flag', choices=choices.FINSP, null=True)
    FKITP = models.IntegerField(verbose_name='Complete kitchen facilities allocation flag', choices=choices.FKITP, null=True)
    FMHP = models.IntegerField(verbose_name='Mobile home costs allocation flag', choices=choices.FMHP, null=True)
    FMRGIP = models.IntegerField(verbose_name='Payment include fire, hazard, flood insurance allocation flag', choices=choices.FMRGIP, null=True)
    FMRGP = models.IntegerField(verbose_name='Regular mortgage payment allocation flag', choices=choices.FMRGP, null=True)
    FMRGTP = models.IntegerField(verbose_name='Payment include real estate taxes allocation flag', choices=choices.FMRGTP, null=True)
    FMRGXP = models.IntegerField(verbose_name='Mortgage status allocation flag', choices=choices.FMRGXP, null=True)
    FMVYP = models.IntegerField(verbose_name='When moved into this house or apartment allocation flag', choices=choices.FMVYP, null=True)
    FPLMP = models.IntegerField(verbose_name='Complete plumbing facilities allocation flag', choices=choices.FPLMP, null=True)
    FRMSP = models.IntegerField(verbose_name='Rooms allocation flag', choices=choices.FRMSP, null=True)
    FRNTMP = models.IntegerField(verbose_name='Meals included in rent allocation flag', choices=choices.FRNTMP, null=True)
    FRNTP = models.IntegerField(verbose_name='Monthly rent allocation flag', choices=choices.FRNTP, null=True)
    FSMP = models.IntegerField(verbose_name='Second mortgage payment allocation flag', choices=choices.FSMP, null=True)
    FSMXHP = models.IntegerField(verbose_name='Home equity loan status allocation flag', choices=choices.FSMXHP, null=True)
    FSMXSP = models.IntegerField(verbose_name='Second mortgage status allocation flag', choices=choices.FSMXSP, null=True)
    FTAXP = models.IntegerField(verbose_name='Taxes on property allocation flag', choices=choices.FTAXP, null=True)
    FTELP = models.IntegerField(verbose_name='Telephones in house allocation flag', choices=choices.FTELP, null=True)
    FTENP = models.IntegerField(verbose_name='Tenure allocation flag', choices=choices.FTENP, null=True)
    FVACSP = models.IntegerField(verbose_name='Vacancy status allocation flag', choices=choices.FVACSP, null=True)
    FVALP = models.IntegerField(verbose_name='Value allocation flag', choices=choices.FVALP, null=True)
    FVEHP = models.IntegerField(verbose_name='Vehicles available by household allocation flag', choices=choices.FVEHP, null=True)
    FWATP = models.IntegerField(verbose_name='Water (yearly cost) allocation flag', choices=choices.FWATP, null=True)
    FYBLP = models.IntegerField(verbose_name='When structure first built allocation flag', choices=choices.FYBLP, null=True)
    WGTP1 = models.IntegerField(verbose_name='Housing Weight replicate 1')
    WGTP2 = models.IntegerField(verbose_name='Housing Weight replicate 2')
    WGTP3 = models.IntegerField(verbose_name='Housing Weight replicate 3')
    WGTP4 = models.IntegerField(verbose_name='Housing Weight replicate 4')
    WGTP5 = models.IntegerField(verbose_name='Housing Weight replicate 5')
    WGTP6 = models.IntegerField(verbose_name='Housing Weight replicate 6')
    WGTP7 = models.IntegerField(verbose_name='Housing Weight replicate 7')
    WGTP8 = models.IntegerField(verbose_name='Housing Weight replicate 8')
    WGTP9 = models.IntegerField(verbose_name='Housing Weight replicate 9')
    WGTP10 = models.IntegerField(verbose_name='Housing Weight replicate 10')
    WGTP11 = models.IntegerField(verbose_name='Housing Weight replicate 11')
    WGTP12 = models.IntegerField(verbose_name='Housing Weight replicate 12')
    WGTP13 = models.IntegerField(verbose_name='Housing Weight replicate 13')
    WGTP14 = models.IntegerField(verbose_name='Housing Weight replicate 14')
    WGTP15 = models.IntegerField(verbose_name='Housing Weight replicate 15')
    WGTP16 = models.IntegerField(verbose_name='Housing Weight replicate 16')
    WGTP17 = models.IntegerField(verbose_name='Housing Weight replicate 17')
    WGTP18 = models.IntegerField(verbose_name='Housing Weight replicate 18')
    WGTP19 = models.IntegerField(verbose_name='Housing Weight replicate 19')
    WGTP20 = models.IntegerField(verbose_name='Housing Weight replicate 20')
    WGTP21 = models.IntegerField(verbose_name='Housing Weight replicate 21')
    WGTP22 = models.IntegerField(verbose_name='Housing Weight replicate 22')
    WGTP23 = models.IntegerField(verbose_name='Housing Weight replicate 23')
    WGTP24 = models.IntegerField(verbose_name='Housing Weight replicate 24')
    WGTP25 = models.IntegerField(verbose_name='Housing Weight replicate 25')
    WGTP26 = models.IntegerField(verbose_name='Housing Weight replicate 26')
    WGTP27 = models.IntegerField(verbose_name='Housing Weight replicate 27')
    WGTP28 = models.IntegerField(verbose_name='Housing Weight replicate 28')
    WGTP29 = models.IntegerField(verbose_name='Housing Weight replicate 29')
    WGTP30 = models.IntegerField(verbose_name='Housing Weight replicate 30')
    WGTP31 = models.IntegerField(verbose_name='Housing Weight replicate 31')
    WGTP32 = models.IntegerField(verbose_name='Housing Weight replicate 32')
    WGTP33 = models.IntegerField(verbose_name='Housing Weight replicate 33')
    WGTP34 = models.IntegerField(verbose_name='Housing Weight replicate 34')
    WGTP35 = models.IntegerField(verbose_name='Housing Weight replicate 35')
    WGTP36 = models.IntegerField(verbose_name='Housing Weight replicate 36')
    WGTP37 = models.IntegerField(verbose_name='Housing Weight replicate 37')
    WGTP38 = models.IntegerField(verbose_name='Housing Weight replicate 38')
    WGTP39 = models.IntegerField(verbose_name='Housing Weight replicate 39')
    WGTP40 = models.IntegerField(verbose_name='Housing Weight replicate 40')
    WGTP41 = models.IntegerField(verbose_name='Housing Weight replicate 41')
    WGTP42 = models.IntegerField(verbose_name='Housing Weight replicate 42')
    WGTP43 = models.IntegerField(verbose_name='Housing Weight replicate 43')
    WGTP44 = models.IntegerField(verbose_name='Housing Weight replicate 44')
    WGTP45 = models.IntegerField(verbose_name='Housing Weight replicate 45')
    WGTP46 = models.IntegerField(verbose_name='Housing Weight replicate 46')
    WGTP47 = models.IntegerField(verbose_name='Housing Weight replicate 47')
    WGTP48 = models.IntegerField(verbose_name='Housing Weight replicate 48')
    WGTP49 = models.IntegerField(verbose_name='Housing Weight replicate 49')
    WGTP50 = models.IntegerField(verbose_name='Housing Weight replicate 50')
    WGTP51 = models.IntegerField(verbose_name='Housing Weight replicate 51')
    WGTP52 = models.IntegerField(verbose_name='Housing Weight replicate 52')
    WGTP53 = models.IntegerField(verbose_name='Housing Weight replicate 53')
    WGTP54 = models.IntegerField(verbose_name='Housing Weight replicate 54')
    WGTP55 = models.IntegerField(verbose_name='Housing Weight replicate 55')
    WGTP56 = models.IntegerField(verbose_name='Housing Weight replicate 56')
    WGTP57 = models.IntegerField(verbose_name='Housing Weight replicate 57')
    WGTP58 = models.IntegerField(verbose_name='Housing Weight replicate 58')
    WGTP59 = models.IntegerField(verbose_name='Housing Weight replicate 59')
    WGTP60 = models.IntegerField(verbose_name='Housing Weight replicate 60')
    WGTP61 = models.IntegerField(verbose_name='Housing Weight replicate 61')
    WGTP62 = models.IntegerField(verbose_name='Housing Weight replicate 62')
    WGTP63 = models.IntegerField(verbose_name='Housing Weight replicate 63')
    WGTP64 = models.IntegerField(verbose_name='Housing Weight replicate 64')
    WGTP65 = models.IntegerField(verbose_name='Housing Weight replicate 65')
    WGTP66 = models.IntegerField(verbose_name='Housing Weight replicate 66')
    WGTP67 = models.IntegerField(verbose_name='Housing Weight replicate 67')
    WGTP68 = models.IntegerField(verbose_name='Housing Weight replicate 68')
    WGTP69 = models.IntegerField(verbose_name='Housing Weight replicate 69')
    WGTP70 = models.IntegerField(verbose_name='Housing Weight replicate 70')
    WGTP71 = models.IntegerField(verbose_name='Housing Weight replicate 71')
    WGTP72 = models.IntegerField(verbose_name='Housing Weight replicate 72')
    WGTP73 = models.IntegerField(verbose_name='Housing Weight replicate 73')
    WGTP74 = models.IntegerField(verbose_name='Housing Weight replicate 74')
    WGTP75 = models.IntegerField(verbose_name='Housing Weight replicate 75')
    WGTP76 = models.IntegerField(verbose_name='Housing Weight replicate 76')
    WGTP77 = models.IntegerField(verbose_name='Housing Weight replicate 77')
    WGTP78 = models.IntegerField(verbose_name='Housing Weight replicate 78')
    WGTP79 = models.IntegerField(verbose_name='Housing Weight replicate 79')
    WGTP80 = models.IntegerField(verbose_name='Housing Weight replicate 80')

    class Meta:
        index_together = ('ST', 'PUMA')

class Person(models.Model):
    SERIALNO = models.IntegerField(verbose_name='Housing unit/GQ person serial number')
    SPORDER = models.IntegerField(verbose_name='Person number')
    PUMA = models.ForeignKey(PublicUseMicrodataArea, verbose_name='Public use microdata area code')
    ST = models.IntegerField(verbose_name='State Code', choices=choices.ST)
    PWGTP = models.IntegerField(verbose_name='Person\'s weight')
    AGEP = models.IntegerField(verbose_name='Age')
    CIT = models.IntegerField(verbose_name='Citizenship status', choices=choices.CIT)
    COW = models.IntegerField(verbose_name='Class of worker', choices=choices.COW, null=True)
    DDRS = models.IntegerField(verbose_name='Difficulty dressing', choices=choices.DDRS, null=True)
    DEYE = models.IntegerField(verbose_name='Vision or hearing difficulty', choices=choices.DEYE, null=True)
    DOUT = models.IntegerField(verbose_name='Difficulty going out', choices=choices.DOUT, null=True)
    DPHY = models.IntegerField(verbose_name='Physical difficulty', choices=choices.DPHY, null=True)
    DREM = models.IntegerField(verbose_name='Difficulty remembering', choices=choices.DREM, null=True)
    DWRK = models.IntegerField(verbose_name='Difficulty working', choices=choices.DWRK, null=True)
    ENG = models.IntegerField(verbose_name='Ability to speak English', choices=choices.ENG, null=True)
    FER = models.IntegerField(verbose_name='Child born within the past 12 months', choices=choices.FER, null=True)
    GCL = models.IntegerField(verbose_name='Grandchildren living in this house', choices=choices.GCL, null=True)
    GCM = models.IntegerField(verbose_name='Months responsible for grandchildren', choices=choices.GCM, null=True)
    GCR = models.IntegerField(verbose_name='Responsible for grandchildren house/institutional GQ)', choices=choices.GCR, null=True)
    INTP = models.IntegerField(verbose_name='Interest, dividends, and net rental income past 12 months (signed)', null=True)
    JWMNP = models.IntegerField(verbose_name='Travel time to work in minutes', null=True)
    JWRIP = models.IntegerField(verbose_name='Vehicle occupancy', choices=choices.JWRIP, null=True)
    JWTR = models.IntegerField(verbose_name='Means of transportation to work', choices=choices.JWTR, null=True)
    LANX = models.IntegerField(verbose_name='Language other than English at home', choices=choices.LANX, null=True)
    MAR = models.IntegerField(verbose_name='Marital status', choices=choices.MAR)
    MIG = models.IntegerField(verbose_name='Mobility status (lived here 1 year ago)', choices=choices.MIG, null=True)
    MIL = models.IntegerField(verbose_name='Military service', choices=choices.MIL, null=True)
    MILY = models.IntegerField(verbose_name='Years of active duty military service', choices=choices.MILY, null=True)
    MLPA = models.IntegerField(verbose_name='Served September 2001 or later', choices=choices.MLPA, null=True)
    MLPB = models.IntegerField(verbose_name='Served August 1990 - August 2001 (including Persian Gulf War)', choices=choices.MLPB, null=True)
    MLPC = models.IntegerField(verbose_name='Served September 1980 - July 1990', choices=choices.MLPC, null=True)
    MLPD = models.IntegerField(verbose_name='Served May 1975 - August 1980', choices=choices.MLPD, null=True)
    MLPE = models.IntegerField(verbose_name='Served Vietnam era (August 1964 - April 1975)', choices=choices.MLPE, null=True)
    MLPF = models.IntegerField(verbose_name='Served March 1961 - July 1964', choices=choices.MLPF, null=True)
    MLPG = models.IntegerField(verbose_name='Served February 1955 - February 1961', choices=choices.MLPG, null=True)
    MLPH = models.IntegerField(verbose_name='Served Korean War (July 1950 - January 1955)', choices=choices.MLPH, null=True)
    MLPI = models.IntegerField(verbose_name='Served January 1947 - June 1950', choices=choices.MLPI, null=True)
    MLPJ = models.IntegerField(verbose_name='Served World War II (December 1941 - December 1946)', choices=choices.MLPJ, null=True)
    MLPK = models.IntegerField(verbose_name='Served November 1941 or earlier', choices=choices.MLPK, null=True)
    NWAB = models.IntegerField(verbose_name='Temporary absence from work', choices=choices.NWAB, null=True)
    NWAV = models.IntegerField(verbose_name='Available for work', choices=choices.NWAV, null=True)
    NWLA = models.IntegerField(verbose_name='On layoff from work', choices=choices.NWLA, null=True)
    NWLK = models.IntegerField(verbose_name='Looking for work', choices=choices.NWLK, null=True)
    NWRE = models.IntegerField(verbose_name='Informed of recall', choices=choices.NWRE, null=True)
    OIP = models.IntegerField(verbose_name='All other income past 12 months', null=True)
    PAP = models.IntegerField(verbose_name='Public assistance income past 12 months', null=True)
    REL = models.IntegerField(verbose_name='Relationship', choices=choices.REL)
    RETP = models.IntegerField(verbose_name='Retirement income past 12 months', null=True)
    SCH = models.IntegerField(verbose_name='School enrollment', choices=choices.SCH, null=True)
    SCHG = models.IntegerField(verbose_name='Grade level attending', choices=choices.SCHG, null=True)
    SCHL = models.IntegerField(verbose_name='Educational attainment', choices=choices.SCHL, null=True)
    SEMP = models.IntegerField(verbose_name='Self-employment income past 12 months (signed)', null=True)
    SEX = models.IntegerField(verbose_name='Sex', choices=choices.SEX)
    SSIP = models.IntegerField(verbose_name='Supplementary Security Income past 12 months', null=True)
    SSP = models.IntegerField(verbose_name='Social security income past 12 months', null=True)
    WAGP = models.IntegerField(verbose_name='Wages or salary income past 12 months', null=True)
    WKHP = models.IntegerField(verbose_name='Usual hours worked per week past 12 months', null=True)
    WKL = models.IntegerField(verbose_name='When last worked', choices=choices.WKL, null=True)
    WKW = models.IntegerField(verbose_name='Weeks worked past 12 months', null=True)
    YOEP = models.IntegerField(verbose_name='Year of entry, null means born in US', choices=choices.YOEP, null=True)
    UWRK = models.IntegerField(verbose_name='Worked last week', choices=choices.UWRK, null=True)
    ANC = models.IntegerField(verbose_name='Ancestry recode', choices=choices.ANC)
    ANC1P = models.IntegerField(verbose_name='Recoded Detailed Ancestry - first entry', choices=choices.ANC1P)
    ANC2P = models.IntegerField(verbose_name='Recoded Detailed Ancestry - second entry', choices=choices.ANC2P)
    DECADE = models.IntegerField(verbose_name='Decade of entry, null means born in the US', choices=choices.DECADE, null=True)
    DRIVESP = models.IntegerField(verbose_name='Number of vehicles calculated from JWRI', choices=choices.DRIVESP, null=True)
    DS = models.IntegerField(verbose_name='Disability recode', choices=choices.DS, null=True)
    ESP = models.IntegerField(verbose_name='Employment status of parents', choices=choices.ESP, null=True)
    ESR = models.IntegerField(verbose_name='Employment status recode', choices=choices.ESR, null=True)
    HISP = models.IntegerField(verbose_name='Recoded detailed Hispanic origin', choices=choices.HISP)
    INDP = models.IntegerField(verbose_name='Industry recode', choices=choices.INDP, null=True)
    JWAP = models.IntegerField(verbose_name='Time of arrival at work - hour and minute', choices=choices.JWAP, null=True)
    JWDP = models.IntegerField(verbose_name='Time of departure for work - hour and minute', choices=choices.JWDP, null=True)
    LANP = models.IntegerField(verbose_name='Language spoken at home, null means only english', choices=choices.LANP, null=True)
    MIGPUMA = models.ForeignKey(PublicUseMicrodataArea, verbose_name='Migration PUMA', related_name='migrator', null=True)
    MSP = models.IntegerField(verbose_name='Married, spouse present/spouse absent', choices=choices.MSP, null=True)
    NAICSP = models.CharField(verbose_name='NAICS Industry code', max_length=8, choices=choices.NAICSP, null=True)
    NATIVITY = models.IntegerField(verbose_name='Nativity', choices=choices.NATIVITY)
    NOP = models.IntegerField(verbose_name='Nativity of parent', choices=choices.NOP, null=True)
    OC = models.IntegerField(verbose_name='Own child', choices=choices.OC)
    OCCP = models.IntegerField(verbose_name='Occupation recode', choices=choices.OCCP, null=True)
    PAOC = models.IntegerField(verbose_name='Presence and age of own children', choices=choices.PAOC, null=True)
    PERNP = models.IntegerField(verbose_name='Total person\'s earnings', null=True)
    PINCP = models.IntegerField(verbose_name='Total person\'s income (signed)', null=True)
    POBP = models.IntegerField(verbose_name='Place of birth (Recode)', choices=choices.POBP)
    POVPIP = models.IntegerField(verbose_name='Person poverty status recode', null=True)
    POWPUMA = models.ForeignKey(PublicUseMicrodataArea, verbose_name='Place of work PUMA', related_name='worker', null=True)
    QTRBIR = models.IntegerField(verbose_name='Quarter of birth', choices=choices.QTRBIR)
    RAC1P = models.IntegerField(verbose_name='Recoded detailed race code', choices=choices.RAC1P)
    RAC2P = models.IntegerField(verbose_name='Recoded detailed race code', choices=choices.RAC2P)
    RAC3P = models.IntegerField(verbose_name='Recoded detailed race code', choices=choices.RAC3P)
    RACAIAN = models.IntegerField(verbose_name='American Indian and Alaska Native recode (American Indian and Alaska Native alone or in combination with one or more other races)', choices=choices.RACAIAN)
    RACASN = models.IntegerField(verbose_name='Asian recode (Asian alone or in combination with one or more other races)', choices=choices.RACASN)
    RACBLK = models.IntegerField(verbose_name='Black or African American recode (Black alone or in combination with one or more other races)', choices=choices.RACBLK)
    RACNHPI = models.IntegerField(verbose_name='Native Hawaiian and Other Pacific Islander recode (Native Hawaiian and Other Pacific Islander alone or in combination with one or more other races)', choices=choices.RACNHPI)
    RACNUM = models.IntegerField(verbose_name='Number of major race groups represented')
    RACSOR = models.IntegerField(verbose_name='Some other race recode (Some other race alone or in combination with one or more other races)', choices=choices.RACSOR)
    RACWHT = models.IntegerField(verbose_name='White recode (White alone or in combination with one or more other races)', choices=choices.RACWHT)
    RC = models.IntegerField(verbose_name='Related child', choices=choices.RC)
    SFN = models.IntegerField(verbose_name='Subfamily number', choices=choices.SFN, null=True)
    SFR = models.IntegerField(verbose_name='Subfamily relationship', choices=choices.SFR, null=True)
    SOCP = models.CharField(verbose_name='SOC Occupation code', max_length=6, choices=choices.SOCP, null=True)
    VPS = models.IntegerField(verbose_name='Veteran period of service', choices=choices.VPS, null=True)
    WAOB = models.IntegerField(verbose_name='World area of birth', choices=choices.WAOB)
    FAGEP = models.IntegerField(verbose_name='Age allocation flag', choices=choices.FAGEP)
    FANCP = models.IntegerField(verbose_name='Ancestry allocation flag', choices=choices.FANCP)
    FCITP = models.IntegerField(verbose_name='Citizenship allocation flag', choices=choices.FCITP)
    FCOWP = models.IntegerField(verbose_name='Class of worker allocation flag', choices=choices.FCOWP)
    FDDRSP = models.IntegerField(verbose_name='Difficulty dressing allocation flag', choices=choices.FDDRSP)
    FDEYEP = models.IntegerField(verbose_name='Vision difficulty allocation flag', choices=choices.FDEYEP)
    FDOUTP = models.IntegerField(verbose_name='Difficulty going out allocation flag', choices=choices.FDOUTP)
    FDPHYP = models.IntegerField(verbose_name='Physical difficulty allocation flag', choices=choices.FDPHYP)
    FDREMP = models.IntegerField(verbose_name='Difficulty remembering allocation flag', choices=choices.FDREMP)
    FDWRKP = models.IntegerField(verbose_name='Difficulty working allocation flag', choices=choices.FDWRKP)
    FENGP = models.IntegerField(verbose_name='Ability to speak English allocation flag', choices=choices.FENGP)
    FESRP = models.IntegerField(verbose_name='Employment status recode allocation flag', choices=choices.FESRP)
    FFERP = models.IntegerField(verbose_name='Children born within the past 12 months allocation flag', choices=choices.FFERP)
    FGCLP = models.IntegerField(verbose_name='Grandchildren living in house allocation flag', choices=choices.FGCLP)
    FGCMP = models.IntegerField(verbose_name='Months responsible for grandchildren allocation flag', choices=choices.FGCMP)
    FGCRP = models.IntegerField(verbose_name='Responsible for grandchildren allocation flag', choices=choices.FGCRP)
    FHISP = models.IntegerField(verbose_name='Detailed Hispanic origin allocation flag', choices=choices.FHISP)
    FINDP = models.IntegerField(verbose_name='Industry allocation flag', choices=choices.FINDP)
    FINTP = models.IntegerField(verbose_name='Interest, dividend, and net rental income allocation flag', choices=choices.FINTP)
    FJWDP = models.IntegerField(verbose_name='Time of departure to work allocation flag', choices=choices.FJWDP)
    FJWMNP = models.IntegerField(verbose_name='Travel time to work allocation flag', choices=choices.FJWMNP)
    FJWRIP = models.IntegerField(verbose_name='Vehicle occupancy allocation flag', choices=choices.FJWRIP)
    FJWTRP = models.IntegerField(verbose_name='Means of transportation to work allocation flag', choices=choices.FJWTRP)
    FLANP = models.IntegerField(verbose_name='Language spoken at home allocation flag', choices=choices.FLANP)
    FLANXP = models.IntegerField(verbose_name='Language other than English allocation flag', choices=choices.FLANXP)
    FMARP = models.IntegerField(verbose_name='Marital status allocation flag', choices=choices.FMARP)
    FMIGP = models.IntegerField(verbose_name='Mobility status allocation flag', choices=choices.FMIGP)
    FMIGSP = models.IntegerField(verbose_name='Migration state allocation flag', choices=choices.FMIGSP)
    FMILPP = models.IntegerField(verbose_name='Military periods of service allocation flag', choices=choices.FMILPP)
    FMILSP = models.IntegerField(verbose_name='Military service allocation flag', choices=choices.FMILSP)
    FMILYP = models.IntegerField(verbose_name='Years of military service allocation flag', choices=choices.FMILYP)
    FOCCP = models.IntegerField(verbose_name='Occupation allocation flag', choices=choices.FOCCP)
    FOIP = models.IntegerField(verbose_name='All other income allocation flag', choices=choices.FOIP)
    FPAP = models.IntegerField(verbose_name='Public assistance income allocation flag', choices=choices.FPAP)
    FPOBP = models.IntegerField(verbose_name='Place of birth allocatin flag', choices=choices.FPOBP)
    FPOWSP = models.IntegerField(verbose_name='Place of work state allocation flag', choices=choices.FPOWSP)
    FRACP = models.IntegerField(verbose_name='Detailed race allocation flag', choices=choices.FRACP)
    FRELP = models.IntegerField(verbose_name='Relationship allocation flag', choices=choices.FRELP)
    FRETP = models.IntegerField(verbose_name='Retirement income allocation flag', choices=choices.FRETP)
    FSCHGP = models.IntegerField(verbose_name='Grade attending allocation flag', choices=choices.FSCHGP)
    FSCHLP = models.IntegerField(verbose_name='Highest education allocation flag', choices=choices.FSCHLP)
    FSCHP = models.IntegerField(verbose_name='School enrollment allocation flag', choices=choices.FSCHP)
    FSEMP = models.IntegerField(verbose_name='Self-employment income allocation flag', choices=choices.FSEMP)
    FSEXP = models.IntegerField(verbose_name='Sex allocation flag', choices=choices.FSEXP)
    FSSIP = models.IntegerField(verbose_name='Supplementary Security Income allocation flag', choices=choices.FSSIP)
    FSSP = models.IntegerField(verbose_name='Social Security income allocation flag', choices=choices.FSSP)
    FWAGP = models.IntegerField(verbose_name='Wages and salary income allocation flag', choices=choices.FWAGP)
    FWKHP = models.IntegerField(verbose_name='Usual hours worked per week past 12 months allocation flag', choices=choices.FWKHP)
    FWKLP = models.IntegerField(verbose_name='Last worked allocation flag', choices=choices.FWKLP)
    FWKWP = models.IntegerField(verbose_name='Weeks worked past 12 months allocation flag', choices=choices.FWKWP)
    FYOEP = models.IntegerField(verbose_name='Year of entry allocation flag', choices=choices.FYOEP)
    PWGTP1 = models.IntegerField(verbose_name='Person\'s Weight replicate 1')
    PWGTP2 = models.IntegerField(verbose_name='Person\'s Weight replicate 2')
    PWGTP3 = models.IntegerField(verbose_name='Person\'s Weight replicate 3')
    PWGTP4 = models.IntegerField(verbose_name='Person\'s Weight replicate 4')
    PWGTP5 = models.IntegerField(verbose_name='Person\'s Weight replicate 5')
    PWGTP6 = models.IntegerField(verbose_name='Person\'s Weight replicate 6')
    PWGTP7 = models.IntegerField(verbose_name='Person\'s Weight replicate 7')
    PWGTP8 = models.IntegerField(verbose_name='Person\'s Weight replicate 8')
    PWGTP9 = models.IntegerField(verbose_name='Person\'s Weight replicate 9')
    PWGTP10 = models.IntegerField(verbose_name='Person\'s Weight replicate 10')
    PWGTP11 = models.IntegerField(verbose_name='Person\'s Weight replicate 11')
    PWGTP12 = models.IntegerField(verbose_name='Person\'s Weight replicate 12')
    PWGTP13 = models.IntegerField(verbose_name='Person\'s Weight replicate 13')
    PWGTP14 = models.IntegerField(verbose_name='Person\'s Weight replicate 14')
    PWGTP15 = models.IntegerField(verbose_name='Person\'s Weight replicate 15')
    PWGTP16 = models.IntegerField(verbose_name='Person\'s Weight replicate 16')
    PWGTP17 = models.IntegerField(verbose_name='Person\'s Weight replicate 17')
    PWGTP18 = models.IntegerField(verbose_name='Person\'s Weight replicate 18')
    PWGTP19 = models.IntegerField(verbose_name='Person\'s Weight replicate 19')
    PWGTP20 = models.IntegerField(verbose_name='Person\'s Weight replicate 20')
    PWGTP21 = models.IntegerField(verbose_name='Person\'s Weight replicate 21')
    PWGTP22 = models.IntegerField(verbose_name='Person\'s Weight replicate 22')
    PWGTP23 = models.IntegerField(verbose_name='Person\'s Weight replicate 23')
    PWGTP24 = models.IntegerField(verbose_name='Person\'s Weight replicate 24')
    PWGTP25 = models.IntegerField(verbose_name='Person\'s Weight replicate 25')
    PWGTP26 = models.IntegerField(verbose_name='Person\'s Weight replicate 26')
    PWGTP27 = models.IntegerField(verbose_name='Person\'s Weight replicate 27')
    PWGTP28 = models.IntegerField(verbose_name='Person\'s Weight replicate 28')
    PWGTP29 = models.IntegerField(verbose_name='Person\'s Weight replicate 29')
    PWGTP30 = models.IntegerField(verbose_name='Person\'s Weight replicate 30')
    PWGTP31 = models.IntegerField(verbose_name='Person\'s Weight replicate 31')
    PWGTP32 = models.IntegerField(verbose_name='Person\'s Weight replicate 32')
    PWGTP33 = models.IntegerField(verbose_name='Person\'s Weight replicate 33')
    PWGTP34 = models.IntegerField(verbose_name='Person\'s Weight replicate 34')
    PWGTP35 = models.IntegerField(verbose_name='Person\'s Weight replicate 35')
    PWGTP36 = models.IntegerField(verbose_name='Person\'s Weight replicate 36')
    PWGTP37 = models.IntegerField(verbose_name='Person\'s Weight replicate 37')
    PWGTP38 = models.IntegerField(verbose_name='Person\'s Weight replicate 38')
    PWGTP39 = models.IntegerField(verbose_name='Person\'s Weight replicate 39')
    PWGTP40 = models.IntegerField(verbose_name='Person\'s Weight replicate 40')
    PWGTP41 = models.IntegerField(verbose_name='Person\'s Weight replicate 41')
    PWGTP42 = models.IntegerField(verbose_name='Person\'s Weight replicate 42')
    PWGTP43 = models.IntegerField(verbose_name='Person\'s Weight replicate 43')
    PWGTP44 = models.IntegerField(verbose_name='Person\'s Weight replicate 44')
    PWGTP45 = models.IntegerField(verbose_name='Person\'s Weight replicate 45')
    PWGTP46 = models.IntegerField(verbose_name='Person\'s Weight replicate 46')
    PWGTP47 = models.IntegerField(verbose_name='Person\'s Weight replicate 47')
    PWGTP48 = models.IntegerField(verbose_name='Person\'s Weight replicate 48')
    PWGTP49 = models.IntegerField(verbose_name='Person\'s Weight replicate 49')
    PWGTP50 = models.IntegerField(verbose_name='Person\'s Weight replicate 50')
    PWGTP51 = models.IntegerField(verbose_name='Person\'s Weight replicate 51')
    PWGTP52 = models.IntegerField(verbose_name='Person\'s Weight replicate 52')
    PWGTP53 = models.IntegerField(verbose_name='Person\'s Weight replicate 53')
    PWGTP54 = models.IntegerField(verbose_name='Person\'s Weight replicate 54')
    PWGTP55 = models.IntegerField(verbose_name='Person\'s Weight replicate 55')
    PWGTP56 = models.IntegerField(verbose_name='Person\'s Weight replicate 56')
    PWGTP57 = models.IntegerField(verbose_name='Person\'s Weight replicate 57')
    PWGTP58 = models.IntegerField(verbose_name='Person\'s Weight replicate 58')
    PWGTP59 = models.IntegerField(verbose_name='Person\'s Weight replicate 59')
    PWGTP60 = models.IntegerField(verbose_name='Person\'s Weight replicate 60')
    PWGTP61 = models.IntegerField(verbose_name='Person\'s Weight replicate 61')
    PWGTP62 = models.IntegerField(verbose_name='Person\'s Weight replicate 62')
    PWGTP63 = models.IntegerField(verbose_name='Person\'s Weight replicate 63')
    PWGTP64 = models.IntegerField(verbose_name='Person\'s Weight replicate 64')
    PWGTP65 = models.IntegerField(verbose_name='Person\'s Weight replicate 65')
    PWGTP66 = models.IntegerField(verbose_name='Person\'s Weight replicate 66')
    PWGTP67 = models.IntegerField(verbose_name='Person\'s Weight replicate 67')
    PWGTP68 = models.IntegerField(verbose_name='Person\'s Weight replicate 68')
    PWGTP69 = models.IntegerField(verbose_name='Person\'s Weight replicate 69')
    PWGTP70 = models.IntegerField(verbose_name='Person\'s Weight replicate 70')
    PWGTP71 = models.IntegerField(verbose_name='Person\'s Weight replicate 71')
    PWGTP72 = models.IntegerField(verbose_name='Person\'s Weight replicate 72')
    PWGTP73 = models.IntegerField(verbose_name='Person\'s Weight replicate 73')
    PWGTP74 = models.IntegerField(verbose_name='Person\'s Weight replicate 74')
    PWGTP75 = models.IntegerField(verbose_name='Person\'s Weight replicate 75')
    PWGTP76 = models.IntegerField(verbose_name='Person\'s Weight replicate 76')
    PWGTP77 = models.IntegerField(verbose_name='Person\'s Weight replicate 77')
    PWGTP78 = models.IntegerField(verbose_name='Person\'s Weight replicate 78')
    PWGTP79 = models.IntegerField(verbose_name='Person\'s Weight replicate 79')
    PWGTP80 = models.IntegerField(verbose_name='Person\'s Weight replicate 80')

    class Meta:
        index_together = ('ST', 'PUMA')
