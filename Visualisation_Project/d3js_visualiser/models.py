from django.db import models
import choices

ADJUSTMENT_FACTOR = 1.015675 # Adjustment factor for dollar amounts, this is for 2006

class State(models.Model):
    code = models.IntegerField()
    name = models.CharField(max_length=80)
    abbreviation = models.CharField(max_length=2)
    
class PUMA(models.Model):
    code = models.IntegerField()
    state = models.ForeignKey(State)

# Create your models here.
class Person(models.Model):
    serieal_number = models.IntegerField(verbose_name='Unique identifier assigned within state')
    PUMA = models.ForeignKey(verbose_name='Public Use Microdata Area')
    state = models.ForeignKey(State, verbose_name='State Code')
    age = models.IntegerField(verbose_name='Person age')
    citizenship_status = models.IntegerField(verbose_name='Persons citizenship status', choices=choices.CITIZENSHIP_STATUS)
    class_of_worker = models.IntegerField(choices=choices.CLASS_OF_WORKER)
    difficulty_dressing = models.IntegerField(choices=choices.YES_NO)
    vision_or_hearing_difficulty = models.IntegerField(choices=choices.YES_NO)
    difficulty_going_out = models.IntegerField(choices=choices.YES_NO)
    physical_difficulty = models.IntegerField(choices=choices.YES_NO)
    difficulty_remembering = models.IntegerField(choices=choices.YES_NO)
    difficulty_working = models.IntegerField(choices=choices.YES_NO)
    can_speak_english = models.IntegerField(choices=choices.SPEAKS_ENGLISH)
    had_child = models.IntegerField(verbose_name='Child born within the past 12 months', choices=choices.YES_NO)
    grandchildren_at_home= models.IntegerField(verbose_name='Grandchildren living in this house', choices=choices.YES_NO)
    grandchildren_months_responsible = models.IntegerField(verbose_name='Months Responsible for grandchildren', choices=choices.GRANDCHILDREN_MONTHS_RESPONSIBLE)
    grandchildren_responsible = models.IntegerField(verbose_name='Is responsible for grandchildren', choices=choices.YES_NO)
    rental_income = models.IntegerField(verbose_name='Interest, dividends, and net rental income past 12 months (signed)')
    work_travel_time = models.IntegerField(verbose_name='Travel time to work')
    vehicle_occupancy = models.IntegerField(choices=choices.VEHICLE_OCCUPANCY)
    work_transportation = models.IntegerField(verbose_name='Means of transportation to work', choices=choices.WORK_TRANSPORTATION)
    language_at_home = models.IntegerField(verbose_name='Language other than English at home', choices=choices.YES_NO)
    married = models.IntegerField(verbose_name='Marital status', choices=choices.MARITAL_STATUS)
    mobility_status = models.IntegerField(verbose_name='Mobility status (lived here 1 year ago)', choices=choices.MOBILITY_STATUS)
    military_service = models.IntegerField(choices=choices.MILITARY_SERVICE)
    military_years = models.IntegerField(verbose_name='Years in military service', choices=choices.MILITARY_YEARS)
    work_temporary_absence = models.IntegerField(verbose_name='Temporary absence from work', choices=choices.YES_NO_REPORT)
    work_availability = models.IntegerField(choices=choices.WORK_AVAILABILITY)
    work_layoff = models.IntegerField(verbose_name='On layoff from work', choices=choices.YES_NO_REPORT)
    work_looking = models.IntegerField(verbose_name='Looking for work', choices=choices.YES_NO_REPORT)
    informed_of_recall = models.IntegerField(choices=choices.YES_NO_REPORT)
    other_income = models.IntegerField(verbose_name='All other income past 12 months')
    assistance_income = models.IntegerField(verbose_name='Public assistance income past 12 months')
    relationship = models.IntegerField(choices=choices.RELATIONSHIP)
    retirement_income = models.IntegerField(verbose_name='Retirement income past 12 months')
    school_enrollment = models.IntegerField(choices=choices.SCHOOL_ENROLLMENT)
    school_grade = models.IntegerField(verbose_name='Grade level attending', choices=choices.SCHOOL_GRADE)
    school_attainment = models.IntegerField(verbose_name='Educational attainment', choices=choices.SCHOOL_ATTAINMENT)
    self_employed_income = models.IntegerField(verbose_name='Self-employment income past 12 months (signed)')
    sex = models.IntegerField(choices=choices.SEX)
    security_income = models.IntegerField(verbose_name='Supplementary Security Income past 12 months')
    social_security_income = models.IntegerField(verbose_name='Social security income past 12 months')
    wages_income = models.IntegerField(verbose_name='Wages or salary income past 12 months')
    hours_per_week = models.IntegerField(verbose_name='Usual hours worked per week past 12 months')
    last_worked = models.IntegerField(verbose_name='When last worked', choices=choices.LAST_WORKED)
    weeks_worked = models.IntegerField(verbose_name='Weeks worked past 12 months')
    year_of_entry = models.IntegerField()
    worked_last_week = models.IntegerField(choices=choices.WORKED_LAST_WEEK)
    ancestry_recode = models.IntegerField(choices=choices.ANCESTRY_RECODE)
    first_ancestry = models.IntegerField(verbose_name='Recoded Detailed Ancestry - first entry', choices=choices.ANCESTRY_DETAIL)
    second_ancestry = models.IntegerField(verbose_name='Recoded Detailed Ancestry - second entry', choices=choices.ANCESTRY_DETAIL)
    disabled = models.IntegerField(verbose_name='Disability recode', choices=choices.DISABLED)
    parents_employment = models.IntegerField(verbose_name='Employment status of parents', choices=choices.PARENTS_EMPLOYMENT)
    employment_status = models.IntegerField(verbose_name='Employment status recode', choices=choices.EMPLOYMENT_STATUS)
    hispanic_origin = models.IntegerField(verbose_name='Recoded detailed Hispanic origin', choices=choices.HISPANIC_ORIGIN)
    industry_recode = models.IntegerField(choices=choices.INDUSTRY_RECODE)
    work_arrival = models.IntegerField(verbose_name='Time of arrival at work - hour and minute', choices=choices.WORK_ARRIVAL)
    work_departure = models.IntegerField(verbose_name='Time of departure for work - hour and minute', choices=choices.WORK_DEPARTURE)
    language_at_home = models.IntegerField(verbose_name='Language spoken at home', choices=choices.HOME_LANGUAGE)
    migration_PUMA = models.ForeignKey(PUMA)
    spouse_present = models.IntegerField(verbose_name='Married, spouse present/spouse absent', choices=choices.SPOUSE_PRESENT)
    NAICS_industry = models.CharField(verbose_name='NAICS Indsutry Code', max_length=8, choices=choices.NAICS_INDUSTRY)
    nativity = models.IntegerField(choices=choices.NATIVITY)
    parents_nativity = models.IntegerField(choices=choices.PARENTS_NATIVITY)
    occupation = models.IntegerField(verbose_name='Occupation recode', choices=choices.OCCUPATION)
    childrens_age = models.IntegerField(verbose_name='Presence and age of own children', choices=choices.CHILDREN_AGE)
    earnings = models.IntegerField(verbose_name='Total person\'s earnings')
    income = models.IntegerField(verbose_name='Total person\'s income')
    birth_place = models.ForeignKey(State, verbose_name='Place of birth (recode)')
    poverty_status = models.IntegerField(verbose_name='Person poverty status recode')
    work_PUMA = models.ForeignKey(PUMA, verbose_name='Place of work PUMA')
    quarter_of_birth = models.IntegerField(choices=choices.QUARTER_OF_BIRTH)
    race_one = models.IntegerField(verbose_name='Recoded detailed race code 1')
    race_two = models.IntegerField(verbose_name='Recoded detailed race code 1')
    race_three = models.IntegerField(verbose_name='Recoded detailed race code 1')
    racaian = models.IntegerField(verbose_name='American Indian and Alaska Native recode (American Indian and Alaska Native alone or in combination with one or more other races)', choices=choices.NO_YES)
    racasn = models.IntegerField(verbose_name='Asian recode (Asian alone or in combination with one or more other races)', choices=choices.NO_YES)
    racblk = models.IntegerField(verbose_name='Black or African American recode (Black alone or in combination with one or more other races)', choices=choices.NO_YES)
    racnhpi = models.IntegerField(verbose_name='Native Hawaiian and Other Pacific Islander recode (Native Hawaiian and Other Pacific Islander alone or in combination with one or more other races)', choices=choices.NO_YES)
    racnum = models.IntegerField(verbose_name='Number of major race groups represented')
    racsor = models.IntegerField(verbose_name='Some other race recode (Some other race alone or in combination with one or more other races)', choices=choices.NO_YES)
    racwht = models.IntegerField(verbose_name='White recode (White alone or in combination with one or more other races)', choices=choices.NO_YES)
    related_child = models.IntegerField(choices=choices.NO_YES)
    subfamily_number = models.IntegerField(choices=choices.SUBFAMILY_NUMBER)
    subfamily_relationship = models.IntegerField(choices=choices.SUBFAMILY_RELATIONSHIP)
    SOC_occupation = models.IntegerField(verbose_name='SOC Occupation code', choices=choices.SOC_OCCUPATION)
    vetern_service = models.IntegerField(verbose_name='Veteran period of service', choices=choices.VETERAN_SERVICE)
    world_POB = models.IntegerField(verbose_name='World area of birth', choices=choices.WORLD_POB)
    FAGEP = models.IntegerField(verbose_name='Age allocation flag', choices=choices.NO_YES)
    FANCP = models.IntegerField(verbose_name='Ancestry allocation flag', choices=choices.NO_YES)
    FCITP = models.IntegerField(verbose_name='Citizenship allocation flag', choices=choices.NO_YES)
    FCOWP = models.IntegerField(verbose_name='Class of worker allocation flag', choices=choices.NO_YES)
    FDDRSP = models.IntegerField(verbose_name='Difficulty dressing allocation flag', choices=choices.NO_YES)
    FDEYEP = models.IntegerField(verbose_name='Vision difficulty allocation flag', choices=choices.NO_YES)
    FDOUTP = models.IntegerField(verbose_name='Difficulty going out allocation flag', choices=choices.NO_YES)
    FDPHYP = models.IntegerField(verbose_name='Physical difficulty allocation flag', choices=choices.NO_YES)
    FDREMP = models.IntegerField(verbose_name='Difficulty remembering allocation flag', choices=choices.NO_YES)
    FDWRKP = models.IntegerField(verbose_name='Difficulty working allocation flag', choices=choices.NO_YES)
    FENGP = models.IntegerField(verbose_name='Ability to speak English allocation flag', choices=choices.NO_YES)
    FESRP = models.IntegerField(verbose_name='Employment status recode allocation flag', choices=choices.NO_YES)
    FFERP = models.IntegerField(verbose_name='Children born within the past 12 months allocation flag', choices=choices.NO_YES)
    FGCLP = models.IntegerField(verbose_name='Grandchildren living in house allocation flag', choices=choices.NO_YES)
    FGCMP = models.IntegerField(verbose_name='Months responsible for grandchildren allocation flag', choices=choices.NO_YES)
    FGCRP = models.IntegerField(verbose_name='Responsible for grandchildren allocation flag', choices=choices.NO_YES)
    FHISP = models.IntegerField(verbose_name='Detailed Hispanic origin allocation flag', choices=choices.NO_YES)
    FINDP = models.IntegerField(verbose_name='Industry allocation flag', choices=choices.NO_YES)
    FINTP = models.IntegerField(verbose_name='Interest, dividend, and net rental income allocation flag', choices=choices.NO_YES)
    FJWDP = models.IntegerField(verbose_name='Time of departure to work allocation flag', choices=choices.NO_YES)
    FJWMNP = models.IntegerField(verbose_name='Travel time to work allocation flag', choices=choices.NO_YES)
    FJWRIP = models.IntegerField(verbose_name='Vehicle occupancy allocation flag', choices=choices.NO_YES)
    FJWTRP = models.IntegerField(verbose_name='Means of transportation to work allocation flag', choices=choices.NO_YES)
    FLANP = models.IntegerField(verbose_name='Language spoken at home allocation flag', choices=choices.NO_YES)
    FLANXP = models.IntegerField(verbose_name='Language other than English allocation flag', choices=choices.NO_YES)
    FMARP = models.IntegerField(verbose_name='Marital status allocation flag', choices=choices.NO_YES)
    FMIGP = models.IntegerField(verbose_name='Mobility status allocation flag', choices=choices.NO_YES)
    FMIGSP = models.IntegerField(verbose_name='Migration state allocation flag', choices=choices.NO_YES)
    FMILPP = models.IntegerField(verbose_name='Military periods of service allocation flag', choices=choices.NO_YES)
    FMILSP = models.IntegerField(verbose_name='Military service allocation flag', choices=choices.NO_YES)
    FMILYP = models.IntegerField(verbose_name='Years of military service allocation flag', choices=choices.NO_YES)
    FOCCP = models.IntegerField(verbose_name='Occupation allocation flag', choices=choices.NO_YES)
    FOIP = models.IntegerField(verbose_name='All other income allocation flag', choices=choices.NO_YES)
    FPAP = models.IntegerField(verbose_name='Public assistance income allocation flag', choices=choices.NO_YES)
    FPOBP = models.IntegerField(verbose_name='Place of birth allocatin flag', choices=choices.NO_YES)
    FPOWSP = models.IntegerField(verbose_name='Place of work state allocation flag', choices=choices.NO_YES)
    FRACP = models.IntegerField(verbose_name='Detailed race allocation flag', choices=choices.NO_YES)
    FRELP = models.IntegerField(verbose_name='Relationship allocation flag', choices=choices.NO_YES)
    FRETP = models.IntegerField(verbose_name='Retirement income allocation flag', choices=choices.NO_YES)
    FSCHGP = models.IntegerField(verbose_name='Grade attending allocation flag', choices=choices.NO_YES)
    FSCHLP = models.IntegerField(verbose_name='Highest education allocation flag', choices=choices.NO_YES)
    FSCHP = models.IntegerField(verbose_name='School enrollment allocation flag', choices=choices.NO_YES)
    FSEMP = models.IntegerField(verbose_name='Self-employment income allocation flag', choices=choices.NO_YES)
    FSEXP = models.IntegerField(verbose_name='Sex allocation flag', choices=choices.NO_YES)
    FSSIP = models.IntegerField(verbose_name='Supplementary Security Income allocation flag', choices=choices.NO_YES)
    FSSP = models.IntegerField(verbose_name='Social Security income allocation flag', choices=choices.NO_YES)
    FWAGP = models.IntegerField(verbose_name='Wages and salary income allocation flag', choices=choices.NO_YES)
    FWKHP = models.IntegerField(verbose_name='Usual hours worked per week past 12 months allocation flag', choices=choices.NO_YES)
    FWKLP = models.IntegerField(verbose_name='Last worked allocation flag', choices=choices.NO_YES)
    FWKWP = models.IntegerField(verbose_name='Weeks worked past 12 months allocation flag', choices=choices.NO_YES)
    FYOEP = models.IntegerField(verbose_name='Year of entry allocation flag', choices=choices.NO_YES)    
    
    class Meta:
        unique_together = ('serial_no', 'state',)

class House(models.Model):
    serieal_number = models.IntegerField(verbose_name='Unique identifier assigned within state')
    PUMA = models.ForeignKey(PUMA, verbose_name='Public Use Microdata Area')
    state = models.ForeignKey(State)
    division = models.IntegerField(choices=choices.DIVISION)
    region = models.IntegerField(choices=choices.REGION)
    ADJUST = models.IntegerField(verbose_name='')
    number_of_residents = models.IntegerField(verbose_name='Number of person records following this housing record')
    type = models.IntegerField(verbose_name='Type of unit', choices=choices.HOUSE_TYPE)
    lot_size = models.IntegerField(choices=choices.LOT_SIZE)
    agriculture_products = models.IntegerField(verbose_name='Sales of Agriculture Products', choices=choices.AGRICULTURE_PRODUCTS)
    bedrooms = models.IntegerField(verbose_name='Number of bedrooms')
    units_in_structure = models.IntegerField(choices=choices.UNITS)
    BUS = models.IntegerField(verbose_name='')
    CONP = models.IntegerField(verbose_name='')
    ELEP = models.IntegerField(verbose_name='')
    FS = models.IntegerField(verbose_name='')
    FULP = models.IntegerField(verbose_name='')
    GASP = models.IntegerField(verbose_name='')
    HFL = models.IntegerField(verbose_name='')
    INSP = models.IntegerField(verbose_name='')
    KIT = models.IntegerField(verbose_name='')
    MHP = models.IntegerField(verbose_name='')
    MRGI = models.IntegerField(verbose_name='')
    MRGP = models.IntegerField(verbose_name='')
    MRGT = models.IntegerField(verbose_name='')
    MRGX = models.IntegerField(verbose_name='')
    PLM = models.IntegerField(verbose_name='')
    RMS = models.IntegerField(verbose_name='')
    RNTM = models.IntegerField(verbose_name='')
    RNTP = models.IntegerField(verbose_name='')
    SMP = models.IntegerField(verbose_name='')
    TEL = models.IntegerField(verbose_name='')
    TEN = models.IntegerField(verbose_name='')
    VACS = models.IntegerField(verbose_name='')
    VAL = models.IntegerField(verbose_name='')
    VEH = models.IntegerField(verbose_name='')
    WATP = models.IntegerField(verbose_name='')
    YBL = models.IntegerField(verbose_name='')
    FES = models.IntegerField(verbose_name='')
    FINCP = models.IntegerField(verbose_name='')
    FPARC = models.IntegerField(verbose_name='')
    GRNTP = models.IntegerField(verbose_name='')
    GRPIP = models.IntegerField(verbose_name='')
    HHL = models.IntegerField(verbose_name='')
    HHT = models.IntegerField(verbose_name='')
    HINCP = models.IntegerField(verbose_name='')
    HUGCL = models.IntegerField(verbose_name='')
    HUPAC = models.IntegerField(verbose_name='')
    HUPAOC = models.IntegerField(verbose_name='')
    HUPARC = models.IntegerField(verbose_name='')
    LNGI = models.IntegerField(verbose_name='')
    MV = models.IntegerField(verbose_name='')
    NOC = models.IntegerField(verbose_name='')
    NPF = models.IntegerField(verbose_name='')
    NPP = models.IntegerField(verbose_name='')
    NR = models.IntegerField(verbose_name='')
    NRC = models.IntegerField(verbose_name='')
    OCPIP = models.IntegerField(verbose_name='')
    PARTNER = models.IntegerField(verbose_name='')
    PSF = models.IntegerField(verbose_name='')
    R18 = models.IntegerField(verbose_name='')
    R60 = models.IntegerField(verbose_name='')
    R65 = models.IntegerField(verbose_name='')
    RESMODE = models.IntegerField(verbose_name='')
    SMOCP = models.IntegerField(verbose_name='')
    SMX = models.IntegerField(verbose_name='')
    SRNT = models.IntegerField(verbose_name='')
    SVAL = models.IntegerField(verbose_name='')
    TAXP = models.IntegerField(verbose_name='')
    WIF = models.IntegerField(verbose_name='')
    WKEXREL = models.IntegerField(verbose_name='')
    WORKSTAT = models.IntegerField(verbose_name='')
    FACRP = models.IntegerField(verbose_name='')
    FAGSP = models.IntegerField(verbose_name='')
    FBDSP = models.IntegerField(verbose_name='')
    FBLDP = models.IntegerField(verbose_name='')
    FBUSP = models.IntegerField(verbose_name='')
    FCONP = models.IntegerField(verbose_name='')
    FELEP = models.IntegerField(verbose_name='')
    FFSP = models.IntegerField(verbose_name='')
    FFULP = models.IntegerField(verbose_name='')
    FGASP = models.IntegerField(verbose_name='')
    FHFLP = models.IntegerField(verbose_name='')
    FINSP = models.IntegerField(verbose_name='')
    FKITP = models.IntegerField(verbose_name='')
    FMHP = models.IntegerField(verbose_name='')
    FMRGIP = models.IntegerField(verbose_name='')
    FMRGP = models.IntegerField(verbose_name='')
    FMRGTP = models.IntegerField(verbose_name='')
    FMRGXP = models.IntegerField(verbose_name='')
    FMVYP = models.IntegerField(verbose_name='')
    FPLMP = models.IntegerField(verbose_name='')
    FRMSP = models.IntegerField(verbose_name='')
    FRNTMP = models.IntegerField(verbose_name='')
    FRNTP = models.IntegerField(verbose_name='')
    FSMP = models.IntegerField(verbose_name='')
    FSMXHP = models.IntegerField(verbose_name='')
    FSMXSP = models.IntegerField(verbose_name='')
    FTAXP = models.IntegerField(verbose_name='')
    FTELP = models.IntegerField(verbose_name='')
    FTENP = models.IntegerField(verbose_name='')
    FVACSP = models.IntegerField(verbose_name='')
    FVALP = models.IntegerField(verbose_name='')
    FVEHP = models.IntegerField(verbose_name='')
    FWATP = models.IntegerField(verbose_name='')
    FYBLP = models.IntegerField(verbose_name='')
    wgtp1 = models.IntegerField(verbose_name='')
    wgtp2 = models.IntegerField(verbose_name='')
    wgtp3 = models.IntegerField(verbose_name='')
    wgtp4 = models.IntegerField(verbose_name='')
    wgtp5 = models.IntegerField(verbose_name='')
    wgtp6 = models.IntegerField(verbose_name='')
    wgtp7 = models.IntegerField(verbose_name='')
    wgtp8 = models.IntegerField(verbose_name='')
    wgtp9 = models.IntegerField(verbose_name='')
    wgtp10 = models.IntegerField(verbose_name='')
    wgtp11 = models.IntegerField(verbose_name='')
    wgtp12 = models.IntegerField(verbose_name='')
    wgtp13 = models.IntegerField(verbose_name='')
    wgtp14 = models.IntegerField(verbose_name='')
    wgtp15 = models.IntegerField(verbose_name='')
    wgtp16 = models.IntegerField(verbose_name='')
    wgtp17 = models.IntegerField(verbose_name='')
    wgtp18 = models.IntegerField(verbose_name='')
    wgtp19 = models.IntegerField(verbose_name='')
    wgtp20 = models.IntegerField(verbose_name='')
    wgtp21 = models.IntegerField(verbose_name='')
    wgtp22 = models.IntegerField(verbose_name='')
    wgtp23 = models.IntegerField(verbose_name='')
    wgtp24 = models.IntegerField(verbose_name='')
    wgtp25 = models.IntegerField(verbose_name='')
    wgtp26 = models.IntegerField(verbose_name='')
    wgtp27 = models.IntegerField(verbose_name='')
    wgtp28 = models.IntegerField(verbose_name='')
    wgtp29 = models.IntegerField(verbose_name='')
    wgtp30 = models.IntegerField(verbose_name='')
    wgtp31 = models.IntegerField(verbose_name='')
    wgtp32 = models.IntegerField(verbose_name='')
    wgtp33 = models.IntegerField(verbose_name='')
    wgtp34 = models.IntegerField(verbose_name='')
    wgtp35 = models.IntegerField(verbose_name='')
    wgtp36 = models.IntegerField(verbose_name='')
    wgtp37 = models.IntegerField(verbose_name='')
    wgtp38 = models.IntegerField(verbose_name='')
    wgtp39 = models.IntegerField(verbose_name='')
    wgtp40 = models.IntegerField(verbose_name='')
    wgtp41 = models.IntegerField(verbose_name='')
    wgtp42 = models.IntegerField(verbose_name='')
    wgtp43 = models.IntegerField(verbose_name='')
    wgtp44 = models.IntegerField(verbose_name='')
    wgtp45 = models.IntegerField(verbose_name='')
    wgtp46 = models.IntegerField(verbose_name='')
    wgtp47 = models.IntegerField(verbose_name='')
    wgtp48 = models.IntegerField(verbose_name='')
    wgtp49 = models.IntegerField(verbose_name='')
    wgtp50 = models.IntegerField(verbose_name='')
    wgtp51 = models.IntegerField(verbose_name='')
    wgtp52 = models.IntegerField(verbose_name='')
    wgtp53 = models.IntegerField(verbose_name='')
    wgtp54 = models.IntegerField(verbose_name='')
    wgtp55 = models.IntegerField(verbose_name='')
    wgtp56 = models.IntegerField(verbose_name='')
    wgtp57 = models.IntegerField(verbose_name='')
    wgtp58 = models.IntegerField(verbose_name='')
    wgtp59 = models.IntegerField(verbose_name='')
    wgtp60 = models.IntegerField(verbose_name='')
    wgtp61 = models.IntegerField(verbose_name='')
    wgtp62 = models.IntegerField(verbose_name='')
    wgtp63 = models.IntegerField(verbose_name='')
    wgtp64 = models.IntegerField(verbose_name='')
    wgtp65 = models.IntegerField(verbose_name='')
    wgtp66 = models.IntegerField(verbose_name='')
    wgtp67 = models.IntegerField(verbose_name='')
    wgtp68 = models.IntegerField(verbose_name='')
    wgtp69 = models.IntegerField(verbose_name='')
    wgtp70 = models.IntegerField(verbose_name='')
    wgtp71 = models.IntegerField(verbose_name='')
    wgtp72 = models.IntegerField(verbose_name='')
    wgtp73 = models.IntegerField(verbose_name='')
    wgtp74 = models.IntegerField(verbose_name='')
    wgtp75 = models.IntegerField(verbose_name='')
    wgtp76 = models.IntegerField(verbose_name='')
    wgtp77 = models.IntegerField(verbose_name='')
    wgtp78 = models.IntegerField(verbose_name='')
    wgtp79 = models.IntegerField(verbose_name='')
    wgtp80 = models.IntegerField(verbose_name='')
    
    class Meta:
        unique_together = ('field1', 'field2',)
